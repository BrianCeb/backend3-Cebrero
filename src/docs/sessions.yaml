openapi: 3.0.1
info:
  title: Adoptme API - Sessions
  version: "1.0.0"
  description: Endpoints del módulo Sessions.

tags:
  - name: Sessions
    description: Autenticación y sesiones de usuario

paths:
  /api/sessions/register:
    post:
      summary: Registrar un usuario
      tags: [Sessions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/RegisterUser'
      responses:
        "200":
          description: Usuario registrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  payload: { type: string, example: 64f8f7a0a0a0a0a0a0a0a0a0 }

  /api/sessions/login:
    post:
      summary: Iniciar sesión
      tags: [Sessions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/LoginUser'
      responses:
        "200":
          description: Sesión iniciada
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: Logged in }

  /api/sessions/current:
    get:
      summary: Obtener usuario actual
      tags: [Sessions]
      responses:
        "200":
          description: Usuario autenticado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  payload: { $ref: '#/components/schemas/User' }

  /api/sessions/unprotectedLogin:
    get:
      summary: Iniciar sesión sin protección
      tags: [Sessions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/LoginUser'
      responses:
        "200":
          description: Sesión iniciada sin protección
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: Unprotected Logged in }

  /api/sessions/unprotectedCurrent:
    get:
      summary: Obtener usuario sin protección
      tags: [Sessions]
      responses:
        "200":
          description: Usuario sin verificación de token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  payload: { $ref: '#/components/schemas/User' }

components:
  schemas:
    User:
      type: object
      properties:
        _id: { type: string, example: 64f8f7a0a0a0a0a0a0a0a0a0 }
        first_name: { type: string, example: Brian }
        last_name: { type: string, example: Cebrero }
        email: { type: string, example: brian@example.com }
        role: { type: string, example: user }
      required: [first_name, last_name, email]
  requestBodies:
    RegisterUser:
      type: object
      properties:
        first_name: { type: string, example: Brian }
        last_name: { type: string, example: Cebrero }
        email: { type: string, example: brian@example.com }
        password: { type: string, example: secret123 }
      required: [first_name, last_name, email, password]
    LoginUser:
      type: object
      properties:
        email: { type: string, example: brian@example.com }
        password: { type: string, example: secret123 }
      required: [email, password]