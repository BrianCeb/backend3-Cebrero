openapi: 3.0.1
info:
  title: Adoptme API - Users
  version: "1.0.0"
  description: Endpoints del módulo Users.

tags:
  - name: Users
    description: Gestión de usuarios

paths:
  /api/users:
    get:
      summary: Obtener todos los usuarios
      tags: [Users]
      responses:
        "200":
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

  /api/users/{uid}:
    get:
      summary: Obtener un usuario por id
      tags: [Users]
      parameters:
        - $ref: '#/components/parameters/Uid'
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  payload:
                    $ref: '#/components/schemas/User'
        "404":
          description: Usuario no encontrado
    put:
      summary: Actualizar un usuario
      tags: [Users]
      parameters:
        - $ref: '#/components/parameters/Uid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/UpdateUser'
      responses:
        "200":
          description: Usuario actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: User updated }
        "404":
          description: Usuario no encontrado
    delete:
      summary: Eliminar un usuario
      tags: [Users]
      parameters:
        - $ref: '#/components/parameters/Uid'
      responses:
        "200":
          description: Usuario eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: User deleted }
        "404":
          description: Usuario no encontrado

components:
  parameters:
    Uid:
      name: uid
      in: path
      required: true
      description: ObjectId del usuario
      schema:
        type: string
        example: 64f8f7a0a0a0a0a0a0a0a0a0

  schemas:
    User:
      type: object
      properties:
        _id:        { type: string, example: 64f8f7a0a0a0a0a0a0a0a0a0 }
        first_name: { type: string, example: Brian }
        last_name:  { type: string, example: Cebrero }
        email:      { type: string, example: brian@example.com }
        role:       { type: string, example: user }
        pets:
          type: array
          items:
            type: object
            properties:
              _id: { type: string, example: 64f8f7a0a0a0a0a0a0a0b0c1 }
      required: [first_name, last_name, email]

  requestBodies:
    UpdateUser:
      type: object
      properties:
        first_name: { type: string, example: Brian }
        last_name:  { type: string, example: Cebrero }
        role:       { type: string, example: admin }
